<%     
    #TODO: move as much of this to application.js as possible
    var_name = get_live_validation_var_name(id)
    override_checkbox_id ||= nil
    constructor_args ||= nil 
    validate_now = (validate_now.nil? ? true : validate_now)
-%>
var valid_so_far = true;
var current_value = $('<%= id %>').value;
var do_validation_now = <%= (validate_now == true).to_s %> || (current_value != null && current_value != '');
var <%= var_name %> = new LiveValidation('<%= id %>'<%= ", { #{constructor_args} }" if constructor_args %>);    
<% [*validations].each do |validation| 
    validation_type = validation[:type] 
    validation_args = validation[:args] 
    validation_args = (validation_args && validation_args != '' ? ", #{validation_args}" : '') -%>    
  <%= var_name %>.add( <%= validation_type + validation_args %> );    
  // Figure out if the existing value is valid 
  valid_so_far = <%= "Validate.now(#{validation_type}, current_value#{validation_args});" %>
<% end -%>

// If the existing value is invalid, then run the validation so the error message is displayed
// We don't run this on valid fields because we don't neet to surround each valid field with a 
// green border when the form first loads. 

if (!valid_so_far && do_validation_now) {              
    <%= var_name %>.validate();
}  

var field_hash = $H({ validate : function() {return <%= var_name %>.validate();}, 
                      description : '<%= description %>', 
                      override_checkbox_id : <%= override_checkbox_id ? "'#{override_checkbox_id}'" : 'null' %>,
                      owning_panel_id : <%= panel_div_id ? "'#{panel_div_id}'" : 'null' %>,
                      owning_voice_or_section_id : <%= voice_or_section_id ? "'#{voice_or_section_id}'" : 'null' %>,
                      validate_on_generate_piece : <%= !panel_div_id.nil? %>,
                      validate_on_submit : <%= panel_div_id.nil? %>,
                      remove_on_panel_change : <%= !override_checkbox_id.nil? %> });
live_validation_fields.push(field_hash);